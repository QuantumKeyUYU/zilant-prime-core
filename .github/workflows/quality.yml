name: Quality / CI pipeline

on:
  push:
    branches: [ main, ci-check-ready ]
  pull_request:
    branches: [ main, ci-check-ready ]

# -------------------------------------------------------------------
jobs:
# ──────────────────────────── Lint + type + tests ───────────────────
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set‑up Python
        uses: actions/setup-python@v4
        with: { python-version: "3.13" }

      - name: Install dev‑deps
        run: pip install -e .[dev]

      - name: Pre‑commit
        run: pre-commit run --all-files

      - name: Ruff
        run: ruff check .

      - name: Black
        run: black --check .

      - name: isort
        run: isort --check-only .

      - name: Bandit
        run: bandit -r src -ll

      - name: Semgrep (SAST)
        run: semgrep ci

      - name: Mypy
        run: mypy --config-file mypy.ini src

      - name: Pytest
        run: ZILANT_ALLOW_ROOT=1 pytest -q

# ──────────────────────────── Perf subset ───────────────────────────
  perf:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v4
        with: { python-version: "3.13" }
      - run: pip install -e .[dev]
      - run: SKIP_FUZZ=1 ZILANT_ALLOW_ROOT=1 pytest -q -m perf --disable-warnings --maxfail=1

# ──────────────────────────── Build + artefacts ─────────────────────
  build-pq:
    needs: [ quality, perf ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v4
        with: { python-version: "3.13" }

      - name: Install build deps
        run: pip install -e .[dev] build pyyaml

      # ---------- wheels ----------
      - name: Build wheels
        run: python tools/build_pq_wheels.py

      - uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

      # ---------- Whitepaper ----------
      - name: Install Pandoc + XeLaTeX (русский шрифт)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y pandoc texlive-xetex texlive-lang-cyrillic fonts-dejavu-core fonts-dejavu-extra

      - name: Generate whitepaper
        run: python tools/gen_whitepaper.py

      - uses: actions/upload-artifact@v4
        with:
          name: whitepaper
          path: dist/whitepaper.pdf

      # ---------- ISO 27001 SoA (опционно) ----------
      - name: Generate ISO 27001 SoA (if controls present)
        run: |
          if [ -f docs/iso_controls.yml ]; then
            python tools/iso_soa_generator.py
          else
            echo "No docs/iso_controls.yml — skipping SoA generation"
          fi

      - uses: actions/upload-artifact@v4
        if: ${{ hashFiles('docs/SoA_ISO27001.md') != '' }}
        with:
          name: iso-soa
          path: docs/SoA_ISO27001.md
