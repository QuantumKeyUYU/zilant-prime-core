name: zilant-ci

on:
  push:
    branches: [ main, ci-check-ready ]
  pull_request:
    branches: [ main, ci-check-ready ]

jobs:
  quality:
    name: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - run: pip install -e .[dev]
      - run: pre-commit run --all-files
      - run: ruff check .
      - run: black --check .
      - run: isort --check-only .
      - run: bandit -r src -ll
      - run: semgrep ci
      - run: mypy --config-file mypy.ini src
      - run: pytest -q

  perf:
    name: perf
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - run: pip install -e .[dev]
      - run: pytest -q --maxfail=1 --disable-warnings -m perf

  build-pq:
    name: build-pq
    runs-on: ubuntu-latest
    needs: [ quality, perf ]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - run: pip install -e .[dev]

      - name: Build PQ wheels
        run: python tools/build_pq_wheels.py

      - name: Upload PQ wheels
        uses: actions/upload-artifact@v4
        with:
          name: pq-wheels
          path: dist/*.whl

      - name: Install Pandoc & XeLaTeX
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex fonts-dejavu

      - name: Generate Whitepaper
        run: python tools/gen_whitepaper.py

      - name: Upload Whitepaper
        uses: actions/upload-artifact@v4
        with:
          name: whitepaper
          path: dist/whitepaper.pdf

  # ↓— этот job пока отключён, т.к. нет скрипта tools/sign_artifacts.py
  # sign:
  #   name: sign
  #   runs-on: ubuntu-latest
  #   needs: build-pq
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.13'
  #     - run: pip install -e .[dev]
  #     - name: Sign artifacts
  #       run: python tools/sign_artifacts.py
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: signed-artifacts
  #         path: dist/*.sig
