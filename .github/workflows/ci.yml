name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/**'
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Lint and Test (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dev dependencies
        run: pip install -e ".[dev]"
      - name: Pre-commit
        run: pre-commit run --all-files
      - name: Run tests
        run: pytest --maxfail=1 --exitfirst -q --cov=src --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: false
          comment: true
          comment_mode: github-pr

  docs:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.x' }
      - name: Build docs
        env:
          SKIP_MERMAID: '1'
        run: make -C docs html SPHINXOPTS="-W"
      - name: Deploy docs
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html

  ui:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: make -C ui build-ui
      - uses: actions/upload-artifact@v4
        with:
          name: zilant-ui
          path: ui/dist/zilant-ui

  gitleaks:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Install gitleaks
        run: |
          GITLEAKS_VER=8.12.0
          curl -sSL "https://github.com/zricethezav/gitleaks/releases/download/v${GITLEAKS_VER}/gitleaks_${GITLEAKS_VER}_linux_x64.tar.gz" \
            | tar xz gitleaks && sudo mv gitleaks /usr/local/bin
      - name: Run gitleaks scan
        run: gitleaks detect --source . --redact --exit-code 1 --report-format sarif --report-path gitleaks.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.sarif

  codeql:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3

  security-scan:
    if: github.event_name == 'push' || github.event_name == 'schedule'
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v0.98.0
      - name: Generate SBOM
        run: syft packages . -o cyclonedx-json=sbom.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sbom-json
          path: sbom.json
      - name: Install Grype
        run: curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
      - name: Scan SBOM for vulnerabilities
        run: grype sbom:sbom.json --fail-on critical
      - name: Install Trivy
        run: curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.45.0
      - name: Run Trivy filesystem scan
        run: trivy fs --exit-code 1 --severity CRITICAL --format json --output trivy-report.json .
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-report
          path: trivy-report.json
