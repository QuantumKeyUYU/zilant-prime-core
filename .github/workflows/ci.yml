name: CI
on:
  push:
    branches: [main]
  pull_request:
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install
        run: pip install pre-commit
      - name: Pre-commit
        run: pre-commit run --all-files --hook-stage manual

  tests:
    needs: pre-commit
    uses: ./.github/workflows/pytest-reusable.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2022]
        python-version: ['3.11', '3.12']
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      extras: dev
    secrets: inherit

  docs:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install docs deps
        run: pip install -r docs/requirements.txt
      - name: Linkcheck
        run: |
          export CI=1
          make -C docs linkcheck SPHINXOPTS='--offline --nitpick-ignore docs/_linkcheck_ignore.txt'
  ci-durations:
    if: github.event_name == 'pull_request'
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const jobs = await github.paginate(github.rest.actions.listJobsForWorkflowRun, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const lines = jobs.map(j => `${j.name}: ${Math.round(j.duration_ms/60000)}m`).join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `CI durations:\n${lines}`
            });
