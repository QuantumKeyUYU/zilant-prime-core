name: Foundation CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  # ──────────────────────────── 0.1–0.4 Lint & Format ────────────────────────────
  lint-format:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black isort

      - name: Ruff (lint)
        run: ruff check src tests

      - name: Black (check-only)
        run: black --check src tests

      - name: isort (check-only)
        run: isort --check-only src tests

      - name: Fix minor issues
        if: always()
        run: |
          ruff --fix src tests
          black --fast src tests
          isort src tests

  # ──────────────────────────── 0.5–0.8 Security & Static Scan ────────────────────────────
  security:
    name: 🛡️ Security & Static Scan
    runs-on: ubuntu-latest
    needs: lint-format

    env:
      CFLAGS: "-fsanitize=address,undefined -fno-omit-frame-pointer"
      LDFLAGS: "-fsanitize=address,undefined"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip

      - name: Install dev dependencies
        run: pip install -e .[dev]

      - name: Bandit (static Python scan)
        run: bandit -r src -lll

      - name: Semgrep (pattern scan)
        uses: returntocorp/semgrep-action@v2
        with:
          config: p/r2c-ci

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python,cpp,go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ─────────────────────────────── 0.2 Tests & Coverage ───────────────────────────────
  test:
    name: ✅ Test Matrix & Coverage
    runs-on: ubuntu-latest
    needs: [ lint-format, security ]
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install project (+ dev deps)
        run: pip install -e .[dev]

      - name: Run pytest with coverage
        run: |
          pytest \
            --maxfail=1 \
            --disable-warnings \
            --durations=10 \
            --cov=src \
            --cov-report=xml:coverage.xml \
            --cov-report=html

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-py${{ matrix.python-version }}
          path: htmlcov

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-py${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload pytest report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-py${{ matrix.python-version }}
          path: pytest-report.xml

  # ──────────────────────────── 0.6 Reproducible Build ────────────────────────────
  repro-build:
    name: 📦 Reproducible Build Check
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make script executable
        run: chmod +x scripts/reprod.sh

      - name: Run reproducible build
        run: bash scripts/reprod.sh

  # ────────────────────────────── 0.7 SBOM & SPDX ──────────────────────────────
  sbom:
    name: 📜 Generate SBOM
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Syft
        run: pip install syft

      - name: Generate CycloneDX SBOM
        run: syft scan --output cyclonedx-json . > sbom.json

      - name: Lint SPDX headers
        run: ruff check --select RST src tests

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  # ───────────────────────────── Build & Release ─────────────────────────────
  build:
    name: 🎁 Build Distributions
    runs-on: ubuntu-latest
    needs: [ repro-build, sbom ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip

      - name: Install build tool
        run: pip install build

      - name: Create sdist & wheel
        run: python -m build --sdist --wheel --outdir dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  # ───────────────────────────── Publish on Tag ─────────────────────────────
  publish:
    name: 🚀 Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install build tool
        run: pip install build

      - name: Build distributions
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
