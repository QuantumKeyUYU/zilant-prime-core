# .github/workflows/ci.yml
# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: 2025 Zilant Prime Core Contributors

name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read

jobs:
  lint-fast:
    if: github.event_name == 'pull_request'
    name: lint-fast
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Cache pip & pre-commit
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      - name: Format check
        run: black --check .
      - name: Ruff lint
        run: ruff check .
      - name: Check imports
        run: isort --check-only .
      - name: Mypy strict
        run: mypy --strict --no-warn-unused-ignores src

  tests-full:
    if: github.event_name == 'push'
    name: tests-full
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Cache pip & pre-commit
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      - name: Run tests
        run: pytest --maxfail=1 --exitfirst -q --cov=src --cov-report=xml
      - name: Build PQ wheels
        run: python tools/build_pq_wheels.py
      - name: upload-wheel
        uses: actions/upload-artifact@v4
        with:
          name: pq-wheel-${{ github.run_number }}
          path: dist/*.whl
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: false
          comment: true
          comment_mode: github-pr

  trivy-scan:
    if: github.event_name == 'push'
    name: Trivy SCA / CVE scan
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: tests-full
    steps:
      - uses: actions/checkout@v4
      - name: Trivy scan (vuln only)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          scanners: vuln
          ignore-unfixed: true
          exit-code: '1'
