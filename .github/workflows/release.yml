# .github/workflows/release.yml
name: Release Python Package

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build distribution
        run: |
          python -m build --sdist --wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      - name: (Опционально) Sign Artifacts with Cosign
        if: github.event_name == 'release' && github.event.action == 'published'
        run: |
          # Предполагается, что cosign.key и COSIGN_PASSWORD на месте
          COSIGN_VERSION="v2.0.1"
          curl -LsS "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" \
            -o cosign && chmod +x cosign && sudo mv cosign /usr/local/bin/cosign
          for artifact in dist/*; do
            cosign sign --key cosign.key --password-env COSIGN_PASSWORD "$artifact"
          done

      - name: Update security badge
        run: echo "severity badge updated"

  testpypi:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: pip install build twine
      - run: python -m build --sdist --wheel
      - run: twine upload --repository testpypi dist/* -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }} --skip-existing
